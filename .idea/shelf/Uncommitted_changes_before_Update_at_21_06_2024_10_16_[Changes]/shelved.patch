Index: src/calculator/router.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from fastapi import APIRouter, HTTPException\r\n\r\nfrom src.calculator.utility.nisab_api_client import fetch_silver_value\r\nfrom src.calculator.utility.nisab_on_livestock_calculation import calculate_goats, calculate_sheep, calculate_buffaloes, \\\r\n    calculate_cows, calculate_camels, calculate_horses\r\nfrom src.calculator.schemas import ZakatOnProperty, \\\r\n    ZakatOnLivestock, ZakatUshrResponse, ZakatUshrRequest, ZakatUshrItem, NisabValue, ZakatOnPropertyCalculated, \\\r\n    ZakatOnLiveStockResponse\r\n\r\nrouter = APIRouter(\r\n    prefix=\"/calculator\",\r\n    tags=[\"Zakat Calculator\"]\r\n)\r\n\r\n@router.post(\"/zakat-property\", response_model=ZakatOnPropertyCalculated)\r\nasync def calculate_zakat_on_property(property: ZakatOnProperty):\r\n    savings_value = (\r\n        (\r\n            property.cash + property.cash_on_bank_cards + property.silver_jewelry + property.gold_jewelry\r\n            + property.purchased_product_for_resaling + property.unfinished_product + property.produced_product_for_resaling\r\n            + property.purchased_not_for_resaling + property.used_after_nisab + property.rent_money + property.stocks_for_resaling\r\n            + property.income_from_stocks - property.taxes_value\r\n        )\r\n    )\r\n    zakat_value = savings_value * 0.025\r\n    if zakat_value == 0:\r\n        raise HTTPException(status_code=400, detail=\"No assets were added\")\r\n    silver_price = await fetch_silver_value('RUB')\r\n    nisab_value = int(silver_price * 612.35)\r\n    if savings_value > nisab_value:\r\n        nisab_value_bool = True\r\n    else:\r\n        nisab_value_bool = False\r\n    calculated_value = ZakatOnPropertyCalculated(zakat_value=zakat_value, nisab_value=nisab_value_bool)\r\n    return calculated_value\r\n\r\n\r\n@router.post(\"/zakat-livestock\", response_model=ZakatOnLiveStockResponse)\r\nasync def calculate_zakat_on_livestock(livestock: ZakatOnLivestock):\r\n    calculated_animals_list = []\r\n\r\n\r\n    calculated_livestock = ZakatOnLiveStockResponse(\r\n        animals=calculated_animals_list,\r\n        value_for_horses=0,\r\n        nisab_status=False\r\n    )\r\n\r\n\r\n    if livestock.camels and livestock.camels >= 5:\r\n        calculated_animals_list += calculate_camels(livestock.camels)\r\n        calculated_livestock.nisab_status = True\r\n\r\n    if livestock.cows and livestock.cows >= 30:\r\n        calculated_animals_list += calculate_cows(livestock.cows)\r\n        calculated_livestock.nisab_status = True\r\n\r\n    if livestock.buffaloes and livestock.buffaloes >= 30:\r\n        calculated_animals_list += calculate_buffaloes(livestock.buffaloes)\r\n        calculated_livestock.nisab_status = True \\\r\n\r\n    if livestock.sheep and livestock.sheep >= 40:\r\n        calculated_animals_list += calculate_sheep(livestock.sheep)\r\n        calculated_livestock.nisab_status = True\r\n\r\n    if livestock.goats and livestock.goats >= 40:\r\n        calculated_animals_list += calculate_goats(livestock.goats)\r\n        calculated_livestock.nisab_status = True\r\n\r\n    if livestock.horses_value:\r\n        calculated_livestock.value_for_horses = int(calculate_horses(livestock.horses_value) * 0.025)\r\n        if livestock.horses_value > 0:\r\n            calculated_livestock.nisab_status = True\r\n\r\n\r\n    calculated_livestock.animals = calculated_animals_list\r\n    return calculated_livestock\r\n\r\n\r\n@router.post(\"/zakat-ushr\", response_model=ZakatUshrResponse)\r\nasync def calculate_zakat_ushr(request : ZakatUshrRequest):\r\n    zakat_ushr_value = []\r\n    zakat_rate = 0\r\n    if not request.is_ushr_land:\r\n        zakat_rate = 0\r\n    elif request.is_irrigated:\r\n        zakat_rate = 0.10\r\n    else:\r\n        zakat_rate = 0.05\r\n\r\n\r\n    for crop in request.crops:\r\n        zakat_type_value = crop.quantity * zakat_rate\r\n        zakat_ushr_value.append(ZakatUshrItem(type=crop.type, quantity=zakat_type_value))\r\n\r\n    response = ZakatUshrResponse(zakat_ushr_value=zakat_ushr_value)\r\n\r\n    return response\r\n\r\n@router.get(\"/nisab-value\", response_model=NisabValue)\r\nasync def get_nisab_value():\r\n    silver_price = await fetch_silver_value('RUB')\r\n    nisab_value = NisabValue(nisab_value=int(silver_price * 612.35), currency='RUB')\r\n    return nisab_value
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/calculator/router.py b/src/calculator/router.py
--- a/src/calculator/router.py	(revision b2cf29693f3cd648458824406a9359e3c877a23b)
+++ b/src/calculator/router.py	(date 1718874052894)
@@ -1,11 +1,11 @@
-from fastapi import APIRouter, HTTPException
+from fastapi import APIRouter, HTTPException, Response, Cookie
 
 from src.calculator.utility.nisab_api_client import fetch_silver_value
 from src.calculator.utility.nisab_on_livestock_calculation import calculate_goats, calculate_sheep, calculate_buffaloes, \
     calculate_cows, calculate_camels, calculate_horses
 from src.calculator.schemas import ZakatOnProperty, \
     ZakatOnLivestock, ZakatUshrResponse, ZakatUshrRequest, ZakatUshrItem, NisabValue, ZakatOnPropertyCalculated, \
-    ZakatOnLiveStockResponse
+    ZakatOnLiveStockResponse, Currency
 
 router = APIRouter(
     prefix="/calculator",
@@ -13,7 +13,7 @@
 )
 
 @router.post("/zakat-property", response_model=ZakatOnPropertyCalculated)
-async def calculate_zakat_on_property(property: ZakatOnProperty):
+async def calculate_zakat_on_property(property: ZakatOnProperty,  currency: str = Cookie(None)):
     savings_value = (
         (
             property.cash + property.cash_on_bank_cards + property.silver_jewelry + property.gold_jewelry
@@ -31,7 +31,7 @@
         nisab_value_bool = True
     else:
         nisab_value_bool = False
-    calculated_value = ZakatOnPropertyCalculated(zakat_value=zakat_value, nisab_value=nisab_value_bool)
+    calculated_value = ZakatOnPropertyCalculated(zakat_value=zakat_value, nisab_value=nisab_value_bool, currency=currency )
     return calculated_value
 
 
@@ -101,4 +101,9 @@
 async def get_nisab_value():
     silver_price = await fetch_silver_value('RUB')
     nisab_value = NisabValue(nisab_value=int(silver_price * 612.35), currency='RUB')
-    return nisab_value
\ No newline at end of file
+    return nisab_value
+
+@router.get("/choose-currency")
+async def choose_currency(request: Currency, response: Response):
+    response.set_cookie(key="currency", value = request.currency, max_age=86400)
+    return {"status": 200, "currency": request.currency}
\ No newline at end of file
Index: src/calculator/schemas.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from typing import List, Optional\r\n\r\nfrom pydantic import BaseModel\r\n\r\n\r\n# Schemas for Zakat on Property\r\nclass ZakatOnProperty(BaseModel):\r\n    cash: Optional[int]\r\n    cash_on_bank_cards: Optional[int]\r\n    silver_jewelry: Optional[int]\r\n    gold_jewelry: Optional[int]\r\n    purchased_product_for_resaling: Optional[int]\r\n    unfinished_product: Optional[int]\r\n    produced_product_for_resaling: Optional[int]\r\n    purchased_not_for_resaling: Optional[int]\r\n    used_after_nisab: Optional[int]\r\n    rent_money: Optional[int]\r\n    stocks_for_resaling: Optional[int]\r\n    income_from_stocks: Optional[int]\r\n    taxes_value: Optional[int]\r\n\r\n    class Config:\r\n        orm_mode = True\r\n\r\n\r\nclass ZakatOnPropertyCalculated(BaseModel):\r\n    zakat_value: float\r\n    nisab_value: bool\r\n    currency: Optional[str] = \"RUB\"\r\n\r\n\r\n# Schemas for Zakat Livestock\r\nclass ZakatOnLivestock(BaseModel):\r\n    camels: Optional[int]\r\n    cows: Optional[int]\r\n    buffaloes: Optional[int]\r\n    sheep: Optional[int]\r\n    goats: Optional[int]\r\n    horses_value: Optional[int]\r\n\r\n\r\nclass Animal(BaseModel):\r\n    type: str\r\n    quantity: int\r\n    age: Optional[int] = 0\r\n\r\n\r\nclass ZakatOnLiveStockResponse(BaseModel):\r\n    animals: List[Animal]\r\n    value_for_horses: int\r\n    nisab_status: bool\r\n\r\n\r\n# Schemas for Zakat Ushr\r\n\r\nclass Crop(BaseModel):\r\n    type: str\r\n    quantity: int\r\n\r\n\r\nclass ZakatUshrRequest(BaseModel):\r\n    crops: List[Crop]\r\n    is_ushr_land: bool\r\n    is_irrigated: bool\r\n\r\n\r\nclass ZakatUshrItem(BaseModel):\r\n    type: str\r\n    quantity: float\r\n\r\n\r\nclass ZakatUshrResponse(BaseModel):\r\n    zakat_ushr_value: List[ZakatUshrItem]\r\n\r\n\r\nclass NisabValue(BaseModel):\r\n    nisab_value: int\r\n    currency: Optional[str] = \"RUB\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/calculator/schemas.py b/src/calculator/schemas.py
--- a/src/calculator/schemas.py	(revision b2cf29693f3cd648458824406a9359e3c877a23b)
+++ b/src/calculator/schemas.py	(date 1718873878476)
@@ -75,4 +75,7 @@
 
 class NisabValue(BaseModel):
     nisab_value: int
-    currency: Optional[str] = "RUB"
\ No newline at end of file
+    currency: Optional[str] = "RUB"
+
+class Currency(BaseModel):
+    currency: str
\ No newline at end of file
